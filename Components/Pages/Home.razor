@page "/"
@page "/category/{_categorySlug}"

@using BlazorEcommerce.Components.Catalog
@using BlazorEcommerce.Models
@using BlazorEcommerce.Services.ProductService
@using BlazorEcommerce.Services.CurrencyService
@using BlazorEcommerce.Utils

@inject NavigationManager _nav
@inject ProductService _productService
@inject CurrencyService _currencyService

@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<div class="flex flex-col gap-4">
    <h1 class="text-4xl mb-4">Our Catalogs</h1>

    @if (_isLoading)
    {
        <p>Loading...</p>
    }

    <div class="grid lg:grid-cols-6 sm:grid-cols-3 h-[70vh] overflow-auto gap-8 p-2">
        @if (_products is not null)
        {
            @foreach (Product product in _products)
            {
                <CardItem Title="@product.Title"
                Description="@product.Description"
                ImageUrl="@product.Image"
                Price="@ConvertPriceToIDR(product.Price)"
                RedirectURL="@GetProductURL(product.Id)"/>
            }
        }
    </div>
</div>

@code{
    [Parameter]
    public string _categorySlug { get; set; } = string.Empty;

    private IEnumerable<Product>? _products = Array.Empty<Product>();
    private bool _isLoading { get; set; } = false;
    private float _idrExchangeRate { get; set; } = 1.0f;

    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;
        _products = await GetCatalogs();
        _isLoading = false;

        _idrExchangeRate = await _currencyService.GetExchangeRate();
    }

    private async Task<IEnumerable<Product>> GetCatalogs()
    {
        if (_categorySlug is null) return await _productService.GetProductsAsync();
        return await _productService.GetProductsByCategoryAsync(_categorySlug);
    }

    private string ConvertPriceToIDR(float price)
    {
        float newPrice = price * _idrExchangeRate;
        return newPrice.ToIndonesiaPriceFormat().Split(',')[0];
    }

    private string GetProductURL(int productId)
    {
        return $"/product/{productId}";
    }
}
