@page "/product/{_productId}"

@using BlazorEcommerce.Components.Common
@using BlazorEcommerce.Services.ProductService
@using BlazorEcommerce.Models
@using BlazorEcommerce.Utils

@inject IJSRuntime _jsRuntime
@inject ProductService _productService

@rendermode InteractiveServer

<PageTitle>Product Details</PageTitle>

<div class="flex flex-col gap-4 w-2/3 mx-auto">
    <Button OnClickCallback="@ToPreviousPage">&larr; Back</Button>
    <div class="grid grid-cols-3 gap-10">
        <div class="col-span-1 flex justify-center h-96">
            <img class="w-fit m-4" src="@_product.Image"/>
        </div>
        <div class="col-span-2 flex flex-col justify-between">
            <div class="flex flex-col gap-8">
                <div class="flex flex-col gap-2">
                    <h3 class="text-lg">@_product.Category.ToCapitalizeWord()</h3  >
                    <h1 class="text-4xl font-bold">@_product.Title</h1>
                </div>
                <p>@_product.Description</p>
            </div>
            <div class="col-span-1 flex flex-row justify-end gap-4">
                <Button>Add to Cart</Button>
                <Button>Buy</Button>
            </div>
        </div>
    </div>
</div>

@code{
    [Parameter]
    public string _productId { get; set; } = string.Empty;

    private Product _product { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        _product = await GetProduct(_productId);
    }

    private async Task<Product> GetProduct(string productId)
    {
        return await _productService.GetProduct(productId);
    }

    private void ToPreviousPage()
    {
        _jsRuntime.InvokeVoidAsync("history.back");
    }
}
